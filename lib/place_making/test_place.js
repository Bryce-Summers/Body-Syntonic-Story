// Generated by CoffeeScript 1.11.1

/*
This is a test place, it initializes the MVP story to test functionality, before the writing of the compiler.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BSS.Test_Place = (function(superClass) {
    extend(Test_Place, superClass);

    function Test_Place(scene) {
      this.scene = scene;
      Test_Place.__super__.constructor.call(this, new BSS.Place_Model());
      this.init_place();
      this.init_scene_ui();
    }

    Test_Place.prototype.init_place = function() {
      var first_path, i, j, k, operator, path_element, path_pline, player_character, pt0, pt1, pts, x, y, y0, y1;
      pts = [];
      x = 0;
      y = 0;
      first_path = null;
      for (i = j = 0; j < 1; i = ++j) {
        x = 0;
        y0 = i * 50;
        y1 = y0 + 300;
        pt0 = new BDS.Point(x, y0);
        pt1 = new BDS.Point(x, y1);
        path_pline = new BDS.Polyline(false, [pt0, pt1]);
        path_element = new BSS.Path_Element(path_pline);
        if (first_path === null) {
          first_path = path_element;
        }
        this.addPath(path_element);
      }
      for (i = k = 1; k <= 9; i = ++k) {
        operator = new BSS.Operator_Element();
        operator.setFunction(function(agent_model) {
          var food;
          food = agent_model.statistics.getFood();
          return agent_model.statistics.setFood(food + 1);
        });
        path_element.addOperator(operator, i * 1.0 / 10);
        this.addOperator(operator);
      }
      operator = new BSS.Operator_Element();
      operator.setFunction(function(agent_model) {
        return agent_model.statistics.setNarrative("The body is an accumulation of food.");
      });
      path_element.addOperator(operator, .001);
      this.addOperator(operator);
      player_character = new BSS.Agent_Element();
      first_path.addAgent(player_character);
      this.addAgent(player_character);
      this.scene.setFocusAgent(player_character);
      return this.scene.setFocusPlace(this);
    };

    Test_Place.prototype.init_scene_ui = function() {
      var h, label_h, p0, p1, p2, p3, pLine, ref, textbox_params, ui, ui_elements, w;
      ref = this.scene.getUI(), ui = ref[0], ui_elements = ref[1];
      w = 1200;
      h = 800;
      label_h = 50;
      p0 = new BDS.Point(w / 4, h - label_h);
      p1 = new BDS.Point(w * 3 / 4, h - label_h);
      p2 = new BDS.Point(w * 3 / 4, h);
      p3 = new BDS.Point(w / 4, h);
      pLine = new BDS.Polyline(false, [p0, p1, p2, p3]);
      textbox_params = {
        fill: EX.style.c_building_fill,
        area: pLine,
        textx: w / 4,
        texty: h,
        str: "Food becomes the body."
      };
      ui_elements.textbox = ui.createLabel(textbox_params);
      p0 = new BDS.Point(0, h - label_h);
      p1 = new BDS.Point(w / 4, h - label_h);
      p2 = new BDS.Point(w / 4, h);
      p3 = new BDS.Point(0, h);
      pLine = new BDS.Polyline(false, [p0, p1, p2, p3]);
      textbox_params = {
        fill: EX.style.c_building_fill,
        area: pLine,
        textx: p3.x,
        texty: p3.y,
        str: EX.style.resource_name_food + "0"
      };
      return ui_elements.foodbox = ui.createLabel(textbox_params);
    };

    return Test_Place;

  })(BSS.Place_Element);

}).call(this);
