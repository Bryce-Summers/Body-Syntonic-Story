// Generated by CoffeeScript 1.11.1

/*

FrameAnimation class.
Written by Bryce Summers on 4.20.2018
(While recovering from flu fatigue.)

Cycles through a set of images at a particular position.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  EX.FrameAnimation = (function(superClass) {
    extend(FrameAnimation, superClass);

    function FrameAnimation() {
      var view;
      FrameAnimation.__super__.constructor.call(this);
      view = this.getVisual();
      this._total_time = 0;
      this._time_elapsed = 0;
      this._time_per_frame = 1;
      this._frames = [];
      this._frame_index = 0;
      this._frame_sprite = null;
    }


    /*
    Configuration.
     */

    FrameAnimation.prototype.configure = function(config) {
      this.setDuration(config.duration);
      this.setTimePerFrame(config.timePerFrame);
      this.loadFrames(config.frames, config.dim);
      return this.restart();
    };

    FrameAnimation.prototype.setDuration = function(time) {
      this._total_time = time;
    };

    FrameAnimation.prototype.setTimePerFrame = function(time) {
      this._time_per_frame = time;
    };

    FrameAnimation.prototype.loadFrames = function(frame_list, dim) {
      var frame, frame_filename, i, len;
      this._frames = [];
      this._frame_index = 0;
      for (i = 0, len = frame_list.length; i < len; i++) {
        frame_filename = frame_list[i];
        if (frame_filename !== null) {
          frame = EX.Visual_Factory.newSprite(frame_filename, dim);
          this._frames.push(frame);
        }
      }
    };

    FrameAnimation.prototype.restart = function() {
      this._time_elapsed = 0;
      this._frame_index = 0;
    };

    FrameAnimation.prototype.finish = function() {
      return this._time_elapsed = this._total_time;
    };


    /*
    User Interface.
     */

    FrameAnimation.prototype.isDone = function() {
      return this._total_time >= this._time_elapsed;
    };

    FrameAnimation.prototype.time = function(dt) {
      this._time_elapsed += dt;
      if (this._time_elapsed > this._total_time) {
        this._time_elapsed = this._total_time;
        this._frame_index = 0;
        return;
      }
      if (this._frames.length > 0) {
        this._frame_index = Math.floor(this._time_elapsed / this._time_per_frame) % this._frames.length;
        if (this._frame_sprite !== null) {
          view.remove(this._frame_sprite);
        }
        this._frame_sprite;
      }
    };

    return FrameAnimation;

  })(BSS.Element);

}).call(this);
