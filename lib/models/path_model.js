// Generated by CoffeeScript 1.11.1

/*
    Written by Bryce Summers on 10.23.2017
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BSS.Path_Model = (function(superClass) {
    extend(Path_Model, superClass);

    function Path_Model() {
      this._capacity = 1;
      this._occupancy = 0;
      this._cost = 1;
      this._distance = 1;
      this.destination = null;
      this.last_agent = null;
      this.operators = [];
    }

    Path_Model.prototype.moveAgents = function(dt) {
      var agent, oper, operator, per_end, per_operator, per_start, percentages_per_meter;
      agent = this.last_agent;
      percentages_per_meter = 1.0 / this._distance;
      while (agent !== null && agent.getNavigation().getCurrentLocation() === this) {
        per_start = agent.getPercentage();
        agent.moveAlongPath(dt, percentages_per_meter);
        oper = this.getNextOperator(per_start);
        if (oper !== null) {
          per_operator = oper.percentage;
          per_end = agent.getPercentage();
          if (per_end >= per_operator) {
            operator = oper.operator;
            agent.operate(operator);
          }
        }
        agent = agent.getNextAgent();
      }
    };

    Path_Model.prototype.setCapacity = function(capacity) {
      return this._capacity = capacity;
    };

    Path_Model.prototype.setTransversalCost = function(cost) {
      return this._cost = cost;
    };

    Path_Model.prototype.setTransversalLength = function(length) {
      return this._distance = length;
    };

    Path_Model.prototype.getTransversalLength = function() {
      return this._distance;
    };

    Path_Model.prototype.isClear = function() {
      return this._occupancy === 0;
    };

    Path_Model.prototype.enqueueAgent = function(agent_model) {
      var navigation_model;
      navigation_model = agent_model.getNavigation();
      navigation_model.setCurrentLocation(this);
      agent_model.setNextAgent(this.last_agent);
      return this.last_agent = agent_model;
    };

    Path_Model.prototype.getNextOperator = function(percentage) {
      var lower_bound, oper;
      oper = {
        operator: null,
        percentage: percentage
      };
      lower_bound = BDS.Arrays.binarySearch(this.operators, oper, function(a, b) {
        return a.percentage <= b.percentage;
      });
      if (lower_bound >= this.operators.length - 1) {
        return null;
      }
      return this.operators[lower_bound + 1];
    };

    Path_Model.prototype.addOperator = function(operator, percentage) {
      var i, insert_index, j, k, new_opers, oper, ref, ref1, ref2;
      oper = {
        operator: operator,
        percentage: percentage
      };
      insert_index = BDS.Arrays.binarySearch(this.operators, oper, function(a, b) {
        return a.percentage <= b.percentage;
      });
      new_opers = [];
      for (i = j = 0, ref = insert_index; j <= ref; i = j += 1) {
        new_opers.push(this.operators[i]);
      }
      new_opers.push(oper);
      for (i = k = ref1 = insert_index + 1, ref2 = this.operators.length; k < ref2; i = k += 1) {
        new_opers.push(oper);
      }
      this.operators = new_opers;
    };

    return Path_Model;

  })(BSS.Model);

}).call(this);
